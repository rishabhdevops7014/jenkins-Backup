<?xml version='1.0' encoding='UTF-8'?>
<l:dependencies xmlns:l='licenses' groupId='io.jenkins.plugins' artifactId='jfrog' version='1.0.5'><l:dependency name='JFrog Plugin' groupId='io.jenkins.plugins' artifactId='jfrog' version='1.0.5' url=''><l:description>The Jenkins Plugins Parent POM Project</l:description><l:license name='The Apache Software License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='build-info-api' groupId='org.jfrog.buildinfo' artifactId='build-info-api' version='2.37.2' url='https://www.jfrog.com/confluence/display/JFROG/Build+Integration'><l:description>JFrog Build-Info</l:description><l:license name='The Apache License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='file-specs-java' groupId='org.jfrog.filespecs' artifactId='file-specs-java' version='1.1.1' url='https://www.jfrog.com/confluence/display/JFROG/Using+File+Specs'><l:description>JFrog File Spec Java</l:description><l:license name='The Apache License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='J2ObjC Annotations' groupId='com.google.j2objc' artifactId='j2objc-annotations' version='1.3' url='https://github.com/google/j2objc/'><l:description>A set of annotations that provide additional information to the J2ObjC
    translator to modify the result of translation.</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Symbol annotation' groupId='org.jenkins-ci' artifactId='symbol-annotation' version='1.1' url='http://jenkins-ci.org/symbol-annotation/'><l:description/><l:license name='MIT License' url='http://opensource.org/licenses/MIT'/></l:dependency><l:dependency name='Apache Commons Codec' groupId='commons-codec' artifactId='commons-codec' version='1.15' url='https://commons.apache.org/proper/commons-codec/'><l:description>The Apache Commons Codec package contains simple encoder and decoders for
     various formats such as Base64 and Hexadecimal.  In addition to these
     widely used encoders and decoders, the codec package also maintains a
     collection of phonetic encoding utilities.</l:description><l:license name='Apache License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='FindBugs-jsr305' groupId='com.google.code.findbugs' artifactId='jsr305' version='3.0.1' url='http://findbugs.sourceforge.net/'><l:description>JSR305 Annotations for Findbugs</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Guava: Google Core Libraries for Java' groupId='com.google.guava' artifactId='guava' version='31.1-jre' url='https://github.com/google/guava'><l:description>Guava is a suite of core and expanded libraries that include
    utility classes, Google's collections, I/O classes, and
    much more.</l:description><l:license name='Apache License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Apache HttpClient' groupId='org.apache.httpcomponents' artifactId='httpclient' version='4.5.13' url='http://hc.apache.org/httpcomponents-client'><l:description>Apache HttpComponents Client</l:description><l:license name='Apache License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Jackson-annotations' groupId='com.fasterxml.jackson.core' artifactId='jackson-annotations' version='2.13.4' url='http://github.com/FasterXML/jackson'><l:description>Core annotations used for value types, used by Jackson data binding package.</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Apache Commons IO' groupId='commons-io' artifactId='commons-io' version='2.11.0' url='https://commons.apache.org/proper/commons-io/'><l:description>The Apache Commons IO library contains utility classes, stream implementations, file filters,
file comparators, endian transformation classes, and much more.</l:description><l:license name='Apache License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='JOpt Simple' groupId='net.sf.jopt-simple' artifactId='jopt-simple' version='5.0.4' url='http://jopt-simple.github.io/jopt-simple'><l:description>A Java library for parsing command line options</l:description><l:license name='The MIT License' url='http://www.opensource.org/licenses/mit-license.php'/></l:dependency><l:dependency name='Annotation Indexer' groupId='org.jenkins-ci' artifactId='annotation-indexer' version='1.16' url='https://github.com/jenkinsci/lib-annotation-indexer'><l:description>Creates index of annotations.</l:description><l:license name='MIT License' url='https://opensource.org/licenses/MIT'/></l:dependency><l:dependency name='Guava ListenableFuture only' groupId='com.google.guava' artifactId='listenablefuture' version='9999.0-empty-to-avoid-conflict-with-guava' url='https://github.com/google/guava/listenablefuture'><l:description>An empty artifact that Guava depends on to signal that it is providing
    ListenableFuture -- but is also available in a second "version" that
    contains com.google.common.util.concurrent.ListenableFuture class, without
    any other Guava classes. The idea is:

    - If users want only ListenableFuture, they depend on listenablefuture-1.0.

    - If users want all of Guava, they depend on guava, which, as of Guava
    27.0, depends on
    listenablefuture-9999.0-empty-to-avoid-conflict-with-guava. The 9999.0-...
    version number is enough for some build systems (notably, Gradle) to select
    that empty artifact over the "real" listenablefuture-1.0 -- avoiding a
    conflict with the copy of ListenableFuture in guava itself. If users are
    using an older version of Guava or a build system other than Gradle, they
    may see class conflicts. If so, they can solve them by manually excluding
    the listenablefuture artifact or manually forcing their build systems to
    use 9999.0-....</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='XML Pull Parsing API' groupId='xmlpull' artifactId='xmlpull' version='1.1.3.1' url='http://www.xmlpull.org'><l:description/><l:license name='Public Domain' url='http://www.xmlpull.org/v1/download/unpacked/LICENSE.txt'/></l:dependency><l:dependency name='jackson-databind' groupId='com.fasterxml.jackson.core' artifactId='jackson-databind' version='2.13.4.2' url='http://github.com/FasterXML/jackson'><l:description>General data-binding functionality for Jackson: works on core streaming API</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Guava InternalFutureFailureAccess and InternalFutures' groupId='com.google.guava' artifactId='failureaccess' version='1.0.1' url='https://github.com/google/guava/failureaccess'><l:description>Contains
    com.google.common.util.concurrent.internal.InternalFutureFailureAccess and
    InternalFutures. Most users will never need to use this artifact. Its
    classes is conceptually a part of Guava, but they're in this separate
    artifact so that Android libraries can use them without pulling in all of
    Guava (just as they can use ListenableFuture by depending on the
    listenablefuture artifact).</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='build-info-client' groupId='org.jfrog.buildinfo' artifactId='build-info-client' version='2.37.2' url='https://www.jfrog.com/confluence/display/JFROG/Build+Integration'><l:description>JFrog Build-Info</l:description><l:license name='The Apache License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='error-prone annotations' groupId='com.google.errorprone' artifactId='error_prone_annotations' version='2.11.0' url='https://errorprone.info/error_prone_annotations'><l:description>Error Prone is a static analysis tool for Java that catches common programming mistakes at compile-time.</l:description><l:license name='Apache 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Apache Commons Compress' groupId='org.apache.commons' artifactId='commons-compress' version='1.21' url='https://commons.apache.org/proper/commons-compress/'><l:description>Apache Commons Compress software defines an API for working with
compression and archive formats.  These include: bzip2, gzip, pack200,
lzma, xz, Snappy, traditional Unix Compress, DEFLATE, DEFLATE64, LZ4,
Brotli, Zstandard and ar, cpio, jar, tar, zip, dump, 7z, arj.</l:description><l:license name='Apache License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='build-info-extractor' groupId='org.jfrog.buildinfo' artifactId='build-info-extractor' version='2.37.2' url='https://www.jfrog.com/confluence/display/JFROG/Build+Integration'><l:description>JFrog Build-Info</l:description><l:license name='The Apache License, Version 2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Jackson-core' groupId='com.fasterxml.jackson.core' artifactId='jackson-core' version='2.13.4' url='https://github.com/FasterXML/jackson-core'><l:description>Core Jackson processing abstractions (aka Streaming API), implementation for JSON</l:description><l:license name='The Apache Software License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='Gson' groupId='com.google.code.gson' artifactId='gson' version='2.8.9' url='https://github.com/google/gson/gson'><l:description>Gson JSON library</l:description><l:license name='Apache-2.0' url='https://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency><l:dependency name='MXParser' groupId='io.github.x-stream' artifactId='mxparser' version='1.2.2' url='http://x-stream.github.io/mxparser'><l:description>MXParser is a fork of xpp3_min 1.1.7 containing only the parser with merged changes of the Plexus fork.</l:description><l:license name='Indiana University Extreme! Lab Software License' url='https://raw.githubusercontent.com/x-stream/mxparser/master/LICENSE.txt'/></l:dependency><l:dependency name='Checker Qual' groupId='org.checkerframework' artifactId='checker-qual' version='3.12.0' url='https://checkerframework.org'><l:description>checker-qual contains annotations (type qualifiers) that a programmer
writes to specify Java code for type-checking by the Checker Framework.</l:description><l:license name='The MIT License' url='http://opensource.org/licenses/MIT'/></l:dependency><l:dependency name='XStream Core' groupId='com.thoughtworks.xstream' artifactId='xstream' version='1.4.19' url='http://x-stream.github.io/xstream'><l:description>XStream is a serialization library from Java objects to XML and back.</l:description><l:license name='BSD-3-Clause' url='http://x-stream.github.io/license.html'/></l:dependency><l:dependency name='Apache HttpCore' groupId='org.apache.httpcomponents' artifactId='httpcore' version='4.4.15' url='http://hc.apache.org/httpcomponents-core-ga'><l:description>Apache HttpComponents Core (blocking I/O)</l:description><l:license name='Apache License, Version 2.0' url='http://www.apache.org/licenses/LICENSE-2.0.txt'/></l:dependency></l:dependencies>